builtin lists;
builtin random;
builtin numbers;



structure CellCoordinates {
    x: num;
    y: num;
}


structure Snake {
    # last one is the head
    cells: list[CellCoordinates];
    # 0 = top, 1 = right, 2 = bottom, 3 = left
    direction: num;
}


structure Grid {
    w: num;
    h: num;
    snake: Snake;
}



# Return a new grid of the given size, with a randomly placed snake of length 1
define new_random_grid: num num -> Grid {
    snake_start_pos = new CellCoordinates(range(0 @0).floor() range(0 @1).floor());
    s = new Snake([snake_start_pos] 0);

    @return = new Grid(@0 @1 s);
}



# Print the grid to the console
define debug for Grid: -> num {
    x = 0;
    y = 0;

    while < y @self.h {

        while < x @self.w {

            co = new CellCoordinates(x y);

            res = @self.snake.cells.contains(co);
            if res {
                print("S ");
            };
            if !res {
                print("_ ");
            };

            x = + x 1;
        }; 

        print("\n");
        y = + y 1;
    };
}




define main: -> num {
    grid = new_random_grid(10 10);
    grid.debug();
}